# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build --if-present

    - name: Run tests
      run: npm test

    - name: Setup Git for pushing
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"


    - name: Bump version
      id: bump_version
      run: |
        VERSION_FILE="VERSION"
        # Nếu chưa có file VERSION thì tạo
        if [ ! -f "$VERSION_FILE" ]; then
          echo "0.0.0" > $VERSION_FILE
        fi

        CURRENT_VERSION=$(cat $VERSION_FILE)
        echo "Current version: $CURRENT_VERSION"

        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

        PATCH=$((PATCH + 1))

        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"

        echo "$NEW_VERSION" > $VERSION_FILE

        echo "version=$NEW_VERSION" >> $GITHUB_ENV
    
    - name: Commit and push version bump
      run: |
        git add VERSION
        git commit -m "chore: bump version to v${{ steps.bump_version.outputs.version }}"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main

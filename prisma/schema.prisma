// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  password  String

  Product Product[]
}

model BlackList_access_token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  accessToken String   @unique
}

model BlackList_refresh_token {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  refreshToken String   @unique
}

model Product {
  id          Int      @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   
  description String?
  price       Float
  stock       Int

  userId Int
  user   User @relation(fields: [userId], references: [id])
  
  // Define a composite primary key using both id and userId
  @@id([id, userId])
  // We still want name to be unique per user
  @@unique([name, userId])
}
